<!--
	Unicorn.Dilithium.config

	This file activates the Dilithium high-speed Sitecore data access provider.
	Dilithium is up to 20x faster than standard Sitecore data access APIs.
	
	This file should be enabled on any environment where you wish to sync items
	using Dilithium (usually dev + CE). Should you wish to say disable Dilithium on CE,
	but leave it alone locally then you can simply delete this file during deploy.
	(configurations will have no issue if they keep using the DilithiumDataStore, as it falls back to Sitecore APIs)

	http://github.com/kamsar/Unicorn
-->
<configuration xmlns:patch="http://www.sitecore.net/xmlconfig/">
	<sitecore>
		<unicorn>
			<defaults>
				<!-- 
					Set Dilithium as the default data store. Configurations may of course override this.
					Patch this out if you do not wish to default to use Dilithium to read from Sitecore.
				-->
				<sourceDataStore>
					<patch:attribute name="type">Unicorn.Data.Dilithium.DilithiumSitecoreDataStore, Unicorn</patch:attribute>
				</sourceDataStore>
			</defaults>
		</unicorn>

		<pipelines>
			<unicornSyncStart>
				<!-- 
					Initializes Dilithium cache when sync starts up for all configs. 
					Without this, even if configs use the Dilithium data store no optimizations will be done during syncs.
				-->
				<processor type="Unicorn.Data.Dilithium.Pipelines.InitializeDilithium, Unicorn" />
			</unicornSyncStart>
			<unicornReserializeStart>
				<!-- 
					Initializes Dilithium cache when reserialize starts up for all configs. 
					Without this, even if configs use the Dilithium data store no optimizations will be done during reserialize.
				-->
				<processor type="Unicorn.Data.Dilithium.Pipelines.InitializeDilithium, Unicorn" />
			</unicornReserializeStart>
		</pipelines>
	</sitecore>
</configuration>
